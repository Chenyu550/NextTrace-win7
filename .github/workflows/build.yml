name: Build & Release

on:
  workflow_dispatch:
    inputs:
      buildVersion:
        description: '版本'
        required: true
        type: string
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Show workflow information
        id: vars
        run: |
          $buildDate = Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ"
          $commitSha1 = git rev-parse --short HEAD
          "BUILD_DATE=$buildDate"       | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "COMMIT_SHA1=$commitSha1"     | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        shell: pwsh
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5'
      - name: Setup patched builder
        run: |
          $GOSDK = go env GOROOT
          Remove-Item -Path "$GOSDK\*" -Recurse -Force
          Set-Location -Path $GOSDK
          Invoke-WebRequest -Uri "https://github.com/XTLS/go-win7/releases/download/patched-1.24.5/go-for-win7-windows-amd64.zip" -OutFile "go-for-win7-windows-amd64.zip"
          Expand-Archive -Path "go-for-win7-windows-amd64.zip" -DestinationPath $GOSDK -Force
          Remove-Item -Path "go-for-win7-windows-amd64.zip" -Force
        shell: pwsh
      - name: Get project dependencies
        run: go mod download
      - name: Build
        env:
          BUILD_VERSION: ${{ github.event.inputs.buildVersion }}
          BUILD_DATE: ${{ steps.vars.outputs.BUILD_DATE }}
          COMMIT_SHA1: ${{ steps.vars.outputs.COMMIT_SHA1 }}
        run: |
          go build -trimpath -o dist/nexttrace_windows7_amd64.exe -ldflags "-X 'github.com/nxtrace/NTrace-core/config.Version=$env:BUILD_VERSION' -X 'github.com/nxtrace/NTrace-core/config.BuildDate=$env:BUILD_DATE' -X 'github.com/nxtrace/NTrace-core/config.CommitID=$env:COMMIT_SHA1' -checklinkname=0 -w -s"
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
          name: ${{ github.event.inputs.buildVersion }}
          draft: false
          prerelease: false
          tag_name: ${{ github.event.inputs.buildVersion }}
          target_commitish: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

